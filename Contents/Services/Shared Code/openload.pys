# -*- coding: utf-8 -*-

#########################################################################################################
#
# OpenLoad scrapper
#
# Coder Alpha
# https://github.com/coder-alpha
#
# Adapted from youtube-dl
# https://github.com/rg3/youtube-dl
# https://github.com/rg3/youtube-dl/issues/10408
# and modified for use with Plex Media Server
#
#########################################################################################################

import re

API_URL = 'https://api.openload.co/1'
PAIR_INFO_URL = API_URL + '/streaming/info'
GET_VIDEO_URL = API_URL + '/streaming/get?file=%s'
VALID_URL = r'https?://(?:openload\.(?:co|io)|oload\.tv)/(?:f|embed)/(?P<id>[a-zA-Z0-9-_]+)'

def resolve(url):
	video_id = match_id(url)
	video_url = pairing_method(video_id)
	return video_url
		
def pairing_method(video_id):
	try:
		get_info = JSON.ObjectFromURL(GET_VIDEO_URL % video_id)
		#print "get_info --- %s" % get_info
		
		status = get_info.get('status')
		#print "status --- %s" % status
		
		if status == 200:
			result = get_info.get('result', {})
			return result.get('url')
	except:
		pass
	
	return None
		
#############################################################################################

def match_id(url):
	VALID_URL_RE = re.compile(VALID_URL)
	m = VALID_URL_RE.match(url)
	assert m
	return m.group('id')